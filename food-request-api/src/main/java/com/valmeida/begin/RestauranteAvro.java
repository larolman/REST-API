/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.valmeida.begin;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RestauranteAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -288969109273022886L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestauranteAvro\",\"namespace\":\"com.valmeida.begin\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"nome\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"taxaFrete\",\"type\":\"double\"},{\"name\":\"ativo\",\"type\":\"boolean\"},{\"name\":\"aberto\",\"type\":\"boolean\"},{\"name\":\"cozinha\",\"type\":{\"type\":\"record\",\"name\":\"CozinhaAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"nome\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RestauranteAvro> ENCODER =
      new BinaryMessageEncoder<RestauranteAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RestauranteAvro> DECODER =
      new BinaryMessageDecoder<RestauranteAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<RestauranteAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<RestauranteAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RestauranteAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this RestauranteAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a RestauranteAvro from a ByteBuffer. */
  public static RestauranteAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long id;
  @Deprecated public java.lang.String nome;
  @Deprecated public double taxaFrete;
  @Deprecated public boolean ativo;
  @Deprecated public boolean aberto;
  @Deprecated public com.valmeida.begin.CozinhaAvro cozinha;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RestauranteAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param nome The new value for nome
   * @param taxaFrete The new value for taxaFrete
   * @param ativo The new value for ativo
   * @param aberto The new value for aberto
   * @param cozinha The new value for cozinha
   */
  public RestauranteAvro(java.lang.Long id, java.lang.String nome, java.lang.Double taxaFrete, java.lang.Boolean ativo, java.lang.Boolean aberto, com.valmeida.begin.CozinhaAvro cozinha) {
    this.id = id;
    this.nome = nome;
    this.taxaFrete = taxaFrete;
    this.ativo = ativo;
    this.aberto = aberto;
    this.cozinha = cozinha;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return nome;
    case 2: return taxaFrete;
    case 3: return ativo;
    case 4: return aberto;
    case 5: return cozinha;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: nome = (java.lang.String)value$; break;
    case 2: taxaFrete = (java.lang.Double)value$; break;
    case 3: ativo = (java.lang.Boolean)value$; break;
    case 4: aberto = (java.lang.Boolean)value$; break;
    case 5: cozinha = (com.valmeida.begin.CozinhaAvro)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'nome' field.
   * @return The value of the 'nome' field.
   */
  public java.lang.String getNome() {
    return nome;
  }

  /**
   * Sets the value of the 'nome' field.
   * @param value the value to set.
   */
  public void setNome(java.lang.String value) {
    this.nome = value;
  }

  /**
   * Gets the value of the 'taxaFrete' field.
   * @return The value of the 'taxaFrete' field.
   */
  public java.lang.Double getTaxaFrete() {
    return taxaFrete;
  }

  /**
   * Sets the value of the 'taxaFrete' field.
   * @param value the value to set.
   */
  public void setTaxaFrete(java.lang.Double value) {
    this.taxaFrete = value;
  }

  /**
   * Gets the value of the 'ativo' field.
   * @return The value of the 'ativo' field.
   */
  public java.lang.Boolean getAtivo() {
    return ativo;
  }

  /**
   * Sets the value of the 'ativo' field.
   * @param value the value to set.
   */
  public void setAtivo(java.lang.Boolean value) {
    this.ativo = value;
  }

  /**
   * Gets the value of the 'aberto' field.
   * @return The value of the 'aberto' field.
   */
  public java.lang.Boolean getAberto() {
    return aberto;
  }

  /**
   * Sets the value of the 'aberto' field.
   * @param value the value to set.
   */
  public void setAberto(java.lang.Boolean value) {
    this.aberto = value;
  }

  /**
   * Gets the value of the 'cozinha' field.
   * @return The value of the 'cozinha' field.
   */
  public com.valmeida.begin.CozinhaAvro getCozinha() {
    return cozinha;
  }

  /**
   * Sets the value of the 'cozinha' field.
   * @param value the value to set.
   */
  public void setCozinha(com.valmeida.begin.CozinhaAvro value) {
    this.cozinha = value;
  }

  /**
   * Creates a new RestauranteAvro RecordBuilder.
   * @return A new RestauranteAvro RecordBuilder
   */
  public static com.valmeida.begin.RestauranteAvro.Builder newBuilder() {
    return new com.valmeida.begin.RestauranteAvro.Builder();
  }

  /**
   * Creates a new RestauranteAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RestauranteAvro RecordBuilder
   */
  public static com.valmeida.begin.RestauranteAvro.Builder newBuilder(com.valmeida.begin.RestauranteAvro.Builder other) {
    return new com.valmeida.begin.RestauranteAvro.Builder(other);
  }

  /**
   * Creates a new RestauranteAvro RecordBuilder by copying an existing RestauranteAvro instance.
   * @param other The existing instance to copy.
   * @return A new RestauranteAvro RecordBuilder
   */
  public static com.valmeida.begin.RestauranteAvro.Builder newBuilder(com.valmeida.begin.RestauranteAvro other) {
    return new com.valmeida.begin.RestauranteAvro.Builder(other);
  }

  /**
   * RecordBuilder for RestauranteAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RestauranteAvro>
    implements org.apache.avro.data.RecordBuilder<RestauranteAvro> {

    private long id;
    private java.lang.String nome;
    private double taxaFrete;
    private boolean ativo;
    private boolean aberto;
    private com.valmeida.begin.CozinhaAvro cozinha;
    private com.valmeida.begin.CozinhaAvro.Builder cozinhaBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.valmeida.begin.RestauranteAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nome)) {
        this.nome = data().deepCopy(fields()[1].schema(), other.nome);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.taxaFrete)) {
        this.taxaFrete = data().deepCopy(fields()[2].schema(), other.taxaFrete);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ativo)) {
        this.ativo = data().deepCopy(fields()[3].schema(), other.ativo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.aberto)) {
        this.aberto = data().deepCopy(fields()[4].schema(), other.aberto);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cozinha)) {
        this.cozinha = data().deepCopy(fields()[5].schema(), other.cozinha);
        fieldSetFlags()[5] = true;
      }
      if (other.hasCozinhaBuilder()) {
        this.cozinhaBuilder = com.valmeida.begin.CozinhaAvro.newBuilder(other.getCozinhaBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing RestauranteAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.valmeida.begin.RestauranteAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nome)) {
        this.nome = data().deepCopy(fields()[1].schema(), other.nome);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.taxaFrete)) {
        this.taxaFrete = data().deepCopy(fields()[2].schema(), other.taxaFrete);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ativo)) {
        this.ativo = data().deepCopy(fields()[3].schema(), other.ativo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.aberto)) {
        this.aberto = data().deepCopy(fields()[4].schema(), other.aberto);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cozinha)) {
        this.cozinha = data().deepCopy(fields()[5].schema(), other.cozinha);
        fieldSetFlags()[5] = true;
      }
      this.cozinhaBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'nome' field.
      * @return The value.
      */
    public java.lang.String getNome() {
      return nome;
    }

    /**
      * Sets the value of the 'nome' field.
      * @param value The value of 'nome'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setNome(java.lang.String value) {
      validate(fields()[1], value);
      this.nome = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'nome' field has been set.
      * @return True if the 'nome' field has been set, false otherwise.
      */
    public boolean hasNome() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'nome' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearNome() {
      nome = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxaFrete' field.
      * @return The value.
      */
    public java.lang.Double getTaxaFrete() {
      return taxaFrete;
    }

    /**
      * Sets the value of the 'taxaFrete' field.
      * @param value The value of 'taxaFrete'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setTaxaFrete(double value) {
      validate(fields()[2], value);
      this.taxaFrete = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'taxaFrete' field has been set.
      * @return True if the 'taxaFrete' field has been set, false otherwise.
      */
    public boolean hasTaxaFrete() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'taxaFrete' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearTaxaFrete() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ativo' field.
      * @return The value.
      */
    public java.lang.Boolean getAtivo() {
      return ativo;
    }

    /**
      * Sets the value of the 'ativo' field.
      * @param value The value of 'ativo'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setAtivo(boolean value) {
      validate(fields()[3], value);
      this.ativo = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ativo' field has been set.
      * @return True if the 'ativo' field has been set, false otherwise.
      */
    public boolean hasAtivo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ativo' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearAtivo() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'aberto' field.
      * @return The value.
      */
    public java.lang.Boolean getAberto() {
      return aberto;
    }

    /**
      * Sets the value of the 'aberto' field.
      * @param value The value of 'aberto'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setAberto(boolean value) {
      validate(fields()[4], value);
      this.aberto = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'aberto' field has been set.
      * @return True if the 'aberto' field has been set, false otherwise.
      */
    public boolean hasAberto() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'aberto' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearAberto() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cozinha' field.
      * @return The value.
      */
    public com.valmeida.begin.CozinhaAvro getCozinha() {
      return cozinha;
    }

    /**
      * Sets the value of the 'cozinha' field.
      * @param value The value of 'cozinha'.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder setCozinha(com.valmeida.begin.CozinhaAvro value) {
      validate(fields()[5], value);
      this.cozinhaBuilder = null;
      this.cozinha = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cozinha' field has been set.
      * @return True if the 'cozinha' field has been set, false otherwise.
      */
    public boolean hasCozinha() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'cozinha' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.valmeida.begin.CozinhaAvro.Builder getCozinhaBuilder() {
      if (cozinhaBuilder == null) {
        if (hasCozinha()) {
          setCozinhaBuilder(com.valmeida.begin.CozinhaAvro.newBuilder(cozinha));
        } else {
          setCozinhaBuilder(com.valmeida.begin.CozinhaAvro.newBuilder());
        }
      }
      return cozinhaBuilder;
    }

    /**
     * Sets the Builder instance for the 'cozinha' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.valmeida.begin.RestauranteAvro.Builder setCozinhaBuilder(com.valmeida.begin.CozinhaAvro.Builder value) {
      clearCozinha();
      cozinhaBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cozinha' field has an active Builder instance
     * @return True if the 'cozinha' field has an active Builder instance
     */
    public boolean hasCozinhaBuilder() {
      return cozinhaBuilder != null;
    }

    /**
      * Clears the value of the 'cozinha' field.
      * @return This builder.
      */
    public com.valmeida.begin.RestauranteAvro.Builder clearCozinha() {
      cozinha = null;
      cozinhaBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RestauranteAvro build() {
      try {
        RestauranteAvro record = new RestauranteAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.nome = fieldSetFlags()[1] ? this.nome : (java.lang.String) defaultValue(fields()[1]);
        record.taxaFrete = fieldSetFlags()[2] ? this.taxaFrete : (java.lang.Double) defaultValue(fields()[2]);
        record.ativo = fieldSetFlags()[3] ? this.ativo : (java.lang.Boolean) defaultValue(fields()[3]);
        record.aberto = fieldSetFlags()[4] ? this.aberto : (java.lang.Boolean) defaultValue(fields()[4]);
        if (cozinhaBuilder != null) {
          record.cozinha = this.cozinhaBuilder.build();
        } else {
          record.cozinha = fieldSetFlags()[5] ? this.cozinha : (com.valmeida.begin.CozinhaAvro) defaultValue(fields()[5]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RestauranteAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<RestauranteAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RestauranteAvro>
    READER$ = (org.apache.avro.io.DatumReader<RestauranteAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
